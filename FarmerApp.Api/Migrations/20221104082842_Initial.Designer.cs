// <auto-generated />
using System;
using FarmerApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FarmerApp.Api.Migrations
{
    [DbContext(typeof(FarmerDbContext))]
    [Migration("20221104082842_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FarmerApp.Data.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Season")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<float>("Size")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("FarmerApp.Data.Models.MeasurementUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("MeasurementUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Кілограми"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Літри"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Тони"
                        });
                });

            modelBuilder.Entity("FarmerApp.Data.Models.OwnResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("OwnResources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Вода"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Зерно"
                        });
                });

            modelBuilder.Entity("FarmerApp.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MeasurementUnitId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MeasurementUnitId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("FarmerApp.Data.Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Мінеральні добрива"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Засоби захисту"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Насіння"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Паливо"
                        },
                        new
                        {
                            Id = 5,
                            Name = "інше"
                        });
                });

            modelBuilder.Entity("FarmerApp.Data.Models.Spend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("SpendTypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("WithdrawalFromWarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("SpendTypeId");

                    b.HasIndex("WithdrawalFromWarehouseId");

                    b.ToTable("Spends");
                });

            modelBuilder.Entity("FarmerApp.Data.Models.SpendType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("SpendTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Продукти із складу"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Власні русурси"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Зарплати працівникам"
                        });
                });

            modelBuilder.Entity("FarmerApp.Data.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("FarmerApp.Data.Models.WarehouseReception", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Invoice")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("WarehouseReceptions");
                });

            modelBuilder.Entity("FarmerApp.Data.Models.WithdrawalFromWarehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("WithdrawalFromWarehouses");
                });

            modelBuilder.Entity("FarmerApp.Data.Models.Product", b =>
                {
                    b.HasOne("FarmerApp.Data.Models.MeasurementUnit", "MeasurementUnit")
                        .WithMany("Products")
                        .HasForeignKey("MeasurementUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FarmerApp.Data.Models.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeasurementUnit");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("FarmerApp.Data.Models.Spend", b =>
                {
                    b.HasOne("FarmerApp.Data.Models.Location", "Location")
                        .WithMany("Spends")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FarmerApp.Data.Models.SpendType", "SpendType")
                        .WithMany("Spends")
                        .HasForeignKey("SpendTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FarmerApp.Data.Models.WithdrawalFromWarehouse", "WithdrawalFromWarehouse")
                        .WithMany("Spendings")
                        .HasForeignKey("WithdrawalFromWarehouseId");

                    b.Navigation("Location");

                    b.Navigation("SpendType");

                    b.Navigation("WithdrawalFromWarehouse");
                });

            modelBuilder.Entity("FarmerApp.Data.Models.Warehouse", b =>
                {
                    b.HasOne("FarmerApp.Data.Models.Product", "Product")
                        .WithMany("Warehousess")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FarmerApp.Data.Models.WarehouseReception", b =>
                {
                    b.HasOne("FarmerApp.Data.Models.Product", "Product")
                        .WithMany("WarehouseReceptions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FarmerApp.Data.Models.WithdrawalFromWarehouse", b =>
                {
                    b.HasOne("FarmerApp.Data.Models.Product", "Product")
                        .WithMany("WithdrawalFromWarehouses")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FarmerApp.Data.Models.Location", b =>
                {
                    b.Navigation("Spends");
                });

            modelBuilder.Entity("FarmerApp.Data.Models.MeasurementUnit", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FarmerApp.Data.Models.Product", b =>
                {
                    b.Navigation("WarehouseReceptions");

                    b.Navigation("Warehousess");

                    b.Navigation("WithdrawalFromWarehouses");
                });

            modelBuilder.Entity("FarmerApp.Data.Models.ProductType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FarmerApp.Data.Models.SpendType", b =>
                {
                    b.Navigation("Spends");
                });

            modelBuilder.Entity("FarmerApp.Data.Models.WithdrawalFromWarehouse", b =>
                {
                    b.Navigation("Spendings");
                });
#pragma warning restore 612, 618
        }
    }
}
